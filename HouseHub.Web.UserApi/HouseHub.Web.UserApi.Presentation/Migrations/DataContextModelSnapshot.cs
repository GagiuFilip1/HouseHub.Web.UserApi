// <auto-generated />
using System;
using HouseHub.Web.UserApi.Core.Enums;
using HouseHub.Web.UserApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HouseHub.Web.UserApi.Presentation.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ushort>("Rating")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<byte>("Type");
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(128)");

                    b.Property<Guid>("WorkerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PostalNumber")
                        .HasColumnType("varchar(16)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProfileUrl")
                        .HasColumnType("varchar(2048)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SecondName")
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Customer", b =>
                {
                    b.HasBaseType("HouseHub.Web.UserApi.Core.Models.Entities.Account");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("char(36)");

                    b.HasDiscriminator().HasValue((byte)0);
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Worker", b =>
                {
                    b.HasBaseType("HouseHub.Web.UserApi.Core.Models.Entities.Account");

                    b.Property<int>("CompletedJobs")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue((byte)1);
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Account", b =>
                {
                    b.HasOne("HouseHub.Web.UserApi.Core.Models.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Domain", b =>
                {
                    b.HasOne("HouseHub.Web.UserApi.Core.Models.Entities.Worker", "Worker")
                        .WithMany("Domains")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HouseHub.Web.UserApi.Core.Models.Entities.Location", b =>
                {
                    b.HasOne("HouseHub.Web.UserApi.Core.Models.Entities.Customer", "Customer")
                        .WithMany("Locations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
